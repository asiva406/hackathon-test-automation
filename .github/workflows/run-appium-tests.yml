name: Hackathon Test Automation - Cypress & Appium Tests

on:
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  Secrets: |
    {
      "baseUrl"        : "${{ vars.BASE_URL }}",
      "UserName"       : "${{ vars.USERNAME }}",
      "Password"       : "${{ secrets.PASSWORD }}",
      "EmailId"        : "${{ vars.EMAIL_ID }}",

      "BearerToken"  : {
      "TOKEN_URL"     : "${{ vars.TOKEN_URL }}",
      "CLIENT_ID"     : "${{ vars.CLIENT_ID }}",
      "CLIENT_SECRET" : "${{ secrets.CLIENT_SECRET }}",
      "SCOPE"         : "${{ vars.SCOPE }}"
      },

      "BasicAuth"    : {
      "username": "${{ vars.BASIC_AUTH_USERNAME }}",
      "password": "${{ secrets.BASIC_AUTH_PASSWORD }}"
      },

      "DBConfig": {
      "server": "${{ vars.DB_SERVER }}",
      "username": "${{ vars.DB_USERNAME }}",
      "password": "${{ secrets.DB_PASSWORD }}",
      "database": "${{ vars.DB_DATABASE }}"
      },

      "LambdaTest":{
      "user": "${{ vars.LT_USER }}",
      "accessKey": "${{ secrets.LT_ACCESS_KEY }}"
      }
    }

jobs:
  setup-config:
    runs-on: ubuntu-latest
    environment: QA
    outputs:
      config-created: ${{ steps.config.outputs.result }}
    steps:
      - name: Create shared config
        id: config
        run: echo "result=success" >> $GITHUB_OUTPUT

  po-api-regression-tests:
    needs: [setup-config]
    runs-on: ubuntu-latest
    environment: QA
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci
          
      - name: Create config
        run: |
          echo '${{ env.Secrets }}' > secrets.json

      - name: Run All tests
        run: npm run tests
        continue-on-error: true
        if: always()

      - name: Attach Extent Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Extent-Report
          path: reports/html

      - name: Attach Video Recordings
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Video-Recordings
          path: reports/video/
